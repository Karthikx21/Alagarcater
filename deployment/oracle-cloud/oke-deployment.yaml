# Kubernetes deployment for Oracle Cloud Infrastructure (OKE)
apiVersion: v1
kind: Namespace
metadata:
  name: algarcatering
---
# PostgreSQL Database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: algarcatering
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        env:
        - name: POSTGRES_DB
          value: "algarcatering"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: postgres-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: algarcatering
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: algarcatering
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: oci-bv
---
# AlgarCatering Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algarcatering-app
  namespace: algarcatering
spec:
  replicas: 2
  selector:
    matchLabels:
      app: algarcatering-app
  template:
    metadata:
      labels:
        app: algarcatering-app
    spec:
      containers:
      - name: algarcatering
        image: <YOUR_OCI_REGISTRY>/algarcatering:latest
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: session-secret
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
# Application Service
apiVersion: v1
kind: Service
metadata:
  name: algarcatering-service
  namespace: algarcatering
spec:
  selector:
    app: algarcatering-app
  ports:
  - port: 80
    targetPort: 5000
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-shape: "flexible"
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "100"
---
# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: algarcatering
type: Opaque
data:
  postgres-password: <BASE64_ENCODED_PASSWORD>
  database-url: <BASE64_ENCODED_DATABASE_URL>
  jwt-secret: <BASE64_ENCODED_JWT_SECRET>
  session-secret: <BASE64_ENCODED_SESSION_SECRET>
